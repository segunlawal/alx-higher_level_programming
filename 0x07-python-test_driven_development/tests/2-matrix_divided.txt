The ``matrix_divided(matrix, div)`` module
--------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Matrix is a list of lists of ints/ floats and div is a non-zero number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix or div contains a float
>>> matrix_divided([[4, 2, 4], [4, 4, 4.4]], 0.2)
[[20.0, 10.0, 20.0], [20.0, 20.0, 22.0]]

list is empty
>>> matrix_divided([], 5)
[]

there is only one argument
>>> matrix_divided(8)
Traceback (most recent call last):
        ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

div is zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
          ...
ZeroDivisionError: division by zero

div is a not a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "div")
Traceback (most recent call last):
          ...
TypeError: div must be a number

matrix rows are of different sizes
>>> matrix_divided([[1, 2, 3], [4, 5, 6,7]], 5)
Traceback (most recent call last):
          ...
TypeError: Each row of the matrix must have the same size

matrix contains a non-integer or a non-float
>>> matrix_divided([[1, 2, 3], [4, 5, "nonint"]], 5)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

